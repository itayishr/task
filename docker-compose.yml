services:
  api:
    build: .
    container_name: entro_task_api
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - db
    environment:
      - DATABASE_URL=postgresql://entro:entro@db:5432/entro_db
    volumes:
      - .:/app
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    container_name: entro_task_worker
    depends_on:
      - rabbitmq
      - db
    environment:
      - DATABASE_URL=postgresql://entro:entro@db:5432/entro_db
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: entro_task_rabbitmq
    ports:
      - "5672:5672"       # RabbitMQ protocol
      - "15672:15672"     # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: entro_task_db
    environment:
      POSTGRES_USER: entro
      POSTGRES_PASSWORD: entro
      POSTGRES_DB: entro_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: entro_task_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data: